{"ast":null,"code":"var _jsxFileName = \"/Users/bdf/GA/github/AMEX/Week9/Code/3-Wednesday/4-Thursday-Component-Lifecycle-Lesson-Solution-Code/starter-code/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\n\nclass Car extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      speed: props.speed || 0\n    };\n    this.incrementSpeed = this.incrementSpeed.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidMount() {\n    window.setTimeout(this.incrementSpeed, 1000);\n    document.addEventListener('click', this.handleClick);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('click', this.handleClick);\n  }\n\n  handleClick() {\n    const colors = ['white', 'purple', 'green', 'blue'];\n    const random = Math.floor(Math.random() * 4);\n    document.body.style.backgroundColor = colors[random];\n  }\n\n  incrementSpeed() {\n    this.setState(prevState => ({\n      speed: prevState.speed + 1\n    }));\n    window.setTimeout(this.incrementSpeed, 1000);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"This \", this.props.model, \" is going \", this.state.speed, \" miles per hour!\");\n  }\n\n}\n\nconst App = () => React.createElement(Car, {\n  model: \"Corvette\",\n  speed: 60,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47\n  },\n  __self: this\n});\n\nexport default App;","map":{"version":3,"sources":["/Users/bdf/GA/github/AMEX/Week9/Code/3-Wednesday/4-Thursday-Component-Lifecycle-Lesson-Solution-Code/starter-code/src/App.js"],"names":["React","Component","Car","constructor","props","state","speed","incrementSpeed","bind","handleClick","componentDidMount","window","setTimeout","document","addEventListener","componentWillUnmount","removeEventListener","colors","random","Math","floor","body","style","backgroundColor","setState","prevState","render","model","App"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;;AAGA,MAAMC,GAAN,SAAkBD,SAAlB,CAA4B;AAE1BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAEF,KAAK,CAACE,KAAN,IAAe;AADX,KAAb;AAIA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBD,IAAjB,CAAsB,IAAtB,CAAnB;AACD;;AAEDE,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,MAAM,CAACC,UAAP,CAAkB,KAAKL,cAAvB,EAAuC,IAAvC;AACAM,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAmC,KAAKL,WAAxC;AACD;;AAEDM,EAAAA,oBAAoB,GAAG;AACrBF,IAAAA,QAAQ,CAACG,mBAAT,CAA6B,OAA7B,EAAsC,KAAKP,WAA3C;AACD;;AAEDA,EAAAA,WAAW,GAAG;AACZ,UAAMQ,MAAM,GAAG,CAAC,OAAD,EAAU,QAAV,EAAoB,OAApB,EAA6B,MAA7B,CAAf;AACA,UAAMC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACD,MAAL,KAAgB,CAA3B,CAAf;AACAL,IAAAA,QAAQ,CAACQ,IAAT,CAAcC,KAAd,CAAoBC,eAApB,GAAsCN,MAAM,CAACC,MAAD,CAA5C;AACD;;AAEDX,EAAAA,cAAc,GAAG;AACf,SAAKiB,QAAL,CAAcC,SAAS,KAAK;AAAEnB,MAAAA,KAAK,EAAEmB,SAAS,CAACnB,KAAV,GAAkB;AAA3B,KAAL,CAAvB;AACAK,IAAAA,MAAM,CAACC,UAAP,CAAkB,KAAKL,cAAvB,EAAuC,IAAvC;AACD;;AAEDmB,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACQ,KAAKtB,KAAL,CAAWuB,KADnB,gBACoC,KAAKtB,KAAL,CAAWC,KAD/C,qBADF;AAKD;;AAtCyB;;AA0C5B,MAAMsB,GAAG,GAAG,MAAM,oBAAC,GAAD;AAAK,EAAA,KAAK,EAAC,UAAX;AAAsB,EAAA,KAAK,EAAE,EAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAlB;;AAEA,eAAeA,GAAf","sourcesContent":["import React, { Component } from 'react'\nimport './App.css'\n\n\nclass Car extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      speed: props.speed || 0,\n    }\n\n    this.incrementSpeed = this.incrementSpeed.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidMount() {\n    window.setTimeout(this.incrementSpeed, 1000);\n    document.addEventListener('click', this.handleClick);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('click', this.handleClick);\n  }\n\n  handleClick() {\n    const colors = ['white', 'purple', 'green', 'blue'];\n    const random = Math.floor(Math.random() * 4);\n    document.body.style.backgroundColor = colors[random];\n  }\n\n  incrementSpeed() {\n    this.setState(prevState => ({ speed: prevState.speed + 1 }));\n    window.setTimeout(this.incrementSpeed, 1000);\n  }\n\n  render() {\n    return (\n      <div>\n        This {this.props.model} is going {this.state.speed} miles per hour!\n      </div>\n    );\n  }\n\n}\n\nconst App = () => <Car model=\"Corvette\" speed={60} />;\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}